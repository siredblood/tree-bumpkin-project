========================================================================
静态库：DataBaseLib 项目概述
========================================================================

应用程序向导已为您创建了此 DataBaseLib 库项目。 

没有为此项目创建源文件。


DataBaseLib.vcproj
这是使用应用程序向导生成的 VC++ 项目的主项目文件。 
它包含生成该文件的 Visual C++ 的版本信息，以及有关使用应用程序向导选择的平台、配置和项目功能的信息。

/////////////////////////////////////////////////////////////////////////////
其他注释：

应用程序向导使用“TODO:”指示应添加或自定义的源代码部分。

/////////////////////////////////////////////////////////////////////////////

/////////////////数据访问层说明//////////////////////////////////////////////

类建立顺序：

1.DBHead：		包含数据访问层所用到库文件的头文件
2.Other：		对数据库操作的帮助类。
3.ObjectDB:		对数据库操作的基类。基本数据库字段，记录的增删查改
4.AccessDB：	对Access数据库操作类，该类继承ObjectDB类
5.SqlServerDB： sqlserver数据库操作类，该类继承ObjectDB类
6.Oracle：		Oracle数据库操作类，该类继承ObjectDB类
7.Factory：		数据访问层的工厂类，根据配置文件类型来创建不同数据库实例
8.BllApp：		向业务层使用数据访问层提供一个数据库实例变量
9.DBHelper：	向业务层使用数据访问层所要引用的头文件，它包含所有数据访问层的类头文件。

/*******************************************************************************/
特别说明：

1.业务层要使用数据访问层要包含:
#include "../DataBaseLib/DBHelper.h"

2.应用层要使用业务层时要在应用层进入时初始化数据库实例：
#include "../DataBaseLib/DBHelper.h"
//初始化数据库
if (!CDatabaseFactory::LoadConfig())
{
	MessageBox("连接失败！",0,0);
}

